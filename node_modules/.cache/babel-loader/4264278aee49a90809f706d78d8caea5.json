{"ast":null,"code":"var _jsxFileName = \"/Users/fatihersoy/Desktop/electroScribe/src/components/Patients/Patients.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass Patients extends Component {\n  constructor() {\n    super(); // Create a state object\n\n    this.state = {\n      // Set patients to an empty array. You will have to use the same method when you are pulling in drugs, conditions and providers as well.\n      patients: []\n    };\n  } // Create a componentWillMount lifecycle method\n\n\n  componentWillMount() {\n    // This will go to the backend and retrieve the info from LB API\n    this.getPatients();\n  } // Create a new method getPatients to make an axios request\n\n\n  getPatients() {\n    axios.get('http://localhost:3000/api/patients').then(response => {\n      // Setting the patients state object to the response\n      this.setState({\n        patients: response.data\n      }, () => {});\n    }).catch(err => console.log(err));\n  } // Render is a lifecyle method\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Current Patients\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/patients/add\",\n      className: \"btn waves-effect waves-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Add New Patient\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Click on a patient name to see their medical record\"), React.createElement(\"table\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Date of Birth\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Cell Number\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.patients.map((patient, i) => {\n      return React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/patients/\".concat(patient.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, patient.pt_name)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, patient.pt_dob), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, patient.pt_cell));\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Patients;","map":{"version":3,"sources":["/Users/fatihersoy/Desktop/electroScribe/src/components/Patients/Patients.js"],"names":["React","Component","Link","axios","Patients","constructor","state","patients","componentWillMount","getPatients","get","then","response","setState","data","catch","err","console","log","render","map","patient","i","id","pt_name","pt_dob","pt_cell"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC7BI,EAAAA,WAAW,GAAG;AACV,YADU,CAEV;;AACA,SAAKC,KAAL,GAAa;AACT;AACAC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH,GAR4B,CAU7B;;;AACAC,EAAAA,kBAAkB,GAAG;AACjB;AACA,SAAKC,WAAL;AACH,GAd4B,CAgB7B;;;AACAA,EAAAA,WAAW,GAAG;AACVN,IAAAA,KAAK,CAACO,GAAN,CAAU,oCAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACd;AACA,WAAKC,QAAL,CAAc;AAAEN,QAAAA,QAAQ,EAAEK,QAAQ,CAACE;AAArB,OAAd,EAA2C,MAAM,CAAG,CAApD;AACH,KAJL,EAKKC,KALL,CAKWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALlB;AAMH,GAxB4B,CA0B7B;;;AACAG,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,eAAT;AAAyB,MAAA,SAAS,EAAC,8BAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DATJ,EAUI;AAAO,MAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,CADJ,CADJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKb,KAAL,CAAWC,QAAX,CAAoBa,GAApB,CAAwB,CAACC,OAAD,EAAUC,CAAV,KAAgB;AACrC,aACI;AAAI,QAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,sBAAeD,OAAO,CAACE,EAAvB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsCF,OAAO,CAACG,OAA9C,CADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,OAAO,CAACI,MAAb,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKJ,OAAO,CAACK,OAAb,CALJ,CADJ;AASH,KAVA,CADL,CARJ,CAVJ,EAgCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCJ,EAiCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCJ,EAkCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCJ,EAmCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnCJ,CADJ;AAuCH;;AAnE4B;;AAsEjC,eAAetB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass Patients extends Component {\n    constructor() {\n        super();\n        // Create a state object\n        this.state = {\n            // Set patients to an empty array. You will have to use the same method when you are pulling in drugs, conditions and providers as well.\n            patients: []\n        }\n    }\n\n    // Create a componentWillMount lifecycle method\n    componentWillMount() {\n        // This will go to the backend and retrieve the info from LB API\n        this.getPatients();\n    }\n\n    // Create a new method getPatients to make an axios request\n    getPatients() {\n        axios.get('http://localhost:3000/api/patients')\n            .then(response => {\n                // Setting the patients state object to the response\n                this.setState({ patients: response.data }, () => { })\n            })\n            .catch(err => console.log(err))\n    }\n\n    // Render is a lifecyle method\n    render() {\n        return (\n            <div>\n                <br />\n                <br />\n                <h1>Current Patients</h1>\n                <br />\n                <Link to=\"/patients/add\" className=\"btn waves-effect waves-light\">Add New Patient\n                    </Link>\n                <br />\n                <br />\n                <p>Click on a patient name to see their medical record</p>\n                <table className=\"highlight\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Date of Birth</th>\n                            <th>Cell Number</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.patients.map((patient, i) => {\n                            return (\n                                <tr key={i}>\n                                    <td>\n                                        <Link to={`/patients/${patient.id}`}>{patient.pt_name}</Link>\n                                    </td>\n                                    <td>{patient.pt_dob}</td>\n                                    <td>{patient.pt_cell}</td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n                <br />\n                <br />\n                <br />\n                <br />\n            </div>\n        )\n    }\n}\n\nexport default Patients;\n"]},"metadata":{},"sourceType":"module"}