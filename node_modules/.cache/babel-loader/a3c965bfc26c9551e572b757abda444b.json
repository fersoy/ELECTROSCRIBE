{"ast":null,"code":"var _jsxFileName = \"/Users/fatihersoy/Desktop/electroScribe/src/components/Drugs/AddPatientDrug.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass AddPatientDrug extends Component {\n  // Creating an addPatient method to take in the newPatient object w/ the form data\n  addPatientDrug(newPatientDrug) {\n    let id = this.props.match.params.id; // Making a POST request thru axios\n\n    axios.request({\n      method: 'POST',\n      url: \"http://localhost:3000/api/patients/\".concat(id, \"/drugs\"),\n      data: newPatientDrug\n    }).then(response => {\n      // Redirecting to patients page\n      this.props.history.push(\"/patients/\".concat(id, \"/drugs\"));\n    }).catch(err => console.log(err));\n  }\n\n  // Creating an onSubmit method that takes in \"e\" or event which is the input from the form and stores it in newPatient object. \n  onSubmit(e) {\n    //console.log(this.refs.name.value);\n    // Making sure to create an array of object [{}] since this is the format the API accepts POST requests\n    const newPatientDrug = [{\n      drug_name: this.refs.drug_name.value,\n      patientId: this.refs.patientId.value\n    }]; // Adds the newPatient object using the addPatient method created above. \n\n    this.addPatientDrug(newPatientDrug);\n    e.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"btn grey\",\n      to: \"/patients\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Back\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Add Drugs to Patient Record\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: \"col s12\",\n      onSubmit: this.onSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"drug_name\",\n      ref: \"drug_name\",\n      placeholder: \"Hydrocodone\",\n      id: \"drug_name\",\n      type: \"text\",\n      className: \"validate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      style: {\n        color: \"black\",\n        fontWeight: 'bold'\n      },\n      className: \"active\",\n      htmlFor: \"drug_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Drug Name\")), React.createElement(\"div\", {\n      className: \"input-field col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"patientId\",\n      ref: \"patientId\",\n      placeholder: \"1\",\n      id: \"patientId\",\n      type: \"text\",\n      className: \"validate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      style: {\n        color: \"black\",\n        fontWeight: 'bold'\n      },\n      className: \"active\",\n      htmlFor: \"patientId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Patient ID\"), React.createElement(\"span\", {\n      className: \"helper-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Patient ID must match the number in the URL\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn waves-effect waves-light\",\n      type: \"submit\",\n      value: \"Save\",\n      name: \"action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default AddPatientDrug;","map":{"version":3,"sources":["/Users/fatihersoy/Desktop/electroScribe/src/components/Drugs/AddPatientDrug.js"],"names":["React","Component","Link","axios","AddPatientDrug","addPatientDrug","newPatientDrug","id","props","match","params","request","method","url","data","then","response","history","push","catch","err","console","log","onSubmit","e","drug_name","refs","value","patientId","preventDefault","render","bind","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass AddPatientDrug extends Component {\n    // Creating an addPatient method to take in the newPatient object w/ the form data\n    addPatientDrug(newPatientDrug) {\n        let id = this.props.match.params.id;\n        // Making a POST request thru axios\n        axios.request({\n            method: 'POST',\n            url: `http://localhost:3000/api/patients/${id}/drugs`,\n            data: newPatientDrug\n        }).then(response => {\n            // Redirecting to patients page\n            this.props.history.push(`/patients/${id}/drugs`);\n        }).catch(err => console.log(err));\n    };\n\n    // Creating an onSubmit method that takes in \"e\" or event which is the input from the form and stores it in newPatient object. \n    onSubmit(e) {\n        //console.log(this.refs.name.value);\n        // Making sure to create an array of object [{}] since this is the format the API accepts POST requests\n        const newPatientDrug = [{\n            drug_name: this.refs.drug_name.value,\n            patientId: this.refs.patientId.value\n        }]\n        // Adds the newPatient object using the addPatient method created above. \n        this.addPatientDrug(newPatientDrug);\n        e.preventDefault();\n    }\n\n    render() {\n        return (\n            <div>\n                <br />\n                <br />\n                <Link className=\"btn grey\" to=\"/patients\">Back</Link>\n                <br />\n                <br />\n                <h1>Add Drugs to Patient Record</h1>\n                <br />\n                <br />\n                <form className=\"col s12\" onSubmit={this.onSubmit.bind(this)}>\n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <input name=\"drug_name\" ref=\"drug_name\" placeholder=\"Hydrocodone\" id=\"drug_name\" type=\"text\" className=\"validate\" />\n                            <label style={{ color: \"black\", fontWeight: 'bold' }} className=\"active\" htmlFor=\"drug_name\">Drug Name</label>\n                        </div>\n                        <div className=\"input-field col s6\">\n                            <input name=\"patientId\" ref=\"patientId\" placeholder=\"1\" id=\"patientId\" type=\"text\" className=\"validate\" />\n                            <label style={{ color: \"black\", fontWeight: 'bold' }} className=\"active\" htmlFor=\"patientId\">Patient ID</label>\n                            <span className=\"helper-text\">Patient ID must match the number in the URL</span>                            \n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <button className=\"btn waves-effect waves-light\" type=\"submit\" value=\"Save\" name=\"action\">Submit</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddPatientDrug;"]},"metadata":{},"sourceType":"module"}